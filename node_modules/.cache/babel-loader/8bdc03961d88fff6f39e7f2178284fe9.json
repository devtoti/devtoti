{"ast":null,"code":"import _objectSpread from \"C:/Users/Toti Webdev/Documents/devtoti.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/Users/Toti Webdev/Documents/devtoti.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Toti Webdev\\\\Documents\\\\devtoti.github.io\\\\src\\\\routes\\\\Projects.js\",\n    _s = $RefreshSig$();\n\nimport { NavLink, Outlet } from \"react-router-dom\";\nimport { obtainProjects } from \"../data\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Projects() {\n  _s();\n\n  var _this = this;\n\n  var projects = obtainProjects();\n\n  var _useState = useState(projects),\n      _useState2 = _slicedToArray(_useState, 2),\n      currArr = _useState2[0],\n      setCurrArr = _useState2[1];\n\n  function filterArray(arr, id) {\n    var active = arr.active;\n    active = true;\n\n    var activeProject = _objectSpread(_objectSpread({}, arr), {}, {\n      active: active\n    });\n\n    console.log(activeProject);\n    setCurrArr([activeProject]);\n  }\n\n  function currProjectImg() {\n    console.log('idk what im doing');\n  }\n\n  var imgRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"project-list\",\n      style: {\n        height: \"auto\" ? \"auto\" : \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-list\",\n        style: {\n          padding: \"1rem 0\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"nav-projects\",\n          children: currArr.map(function (project, id) {\n            return /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/Projects/\".concat(project.id),\n              onClick: function onClick() {\n                return currArr.length > 1 ? filterArray(project) : setCurrArr(projects);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: project.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"img\", {\n                className: project.active == true ? 'working' : 'notworking',\n                ref: imgRef,\n                src: project.img\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Made with: \", project.techs]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 17\n              }, _this)]\n            }, project.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Projects, \"SSGpGQLJiD0F6Tq2/EQHPW15FR4=\");\n\n_c = Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"sources":["C:/Users/Toti Webdev/Documents/devtoti.github.io/src/routes/Projects.js"],"names":["NavLink","Outlet","obtainProjects","useState","useEffect","useRef","Projects","projects","currArr","setCurrArr","filterArray","arr","id","active","activeProject","console","log","currProjectImg","imgRef","height","padding","map","project","length","name","img","techs"],"mappings":";;;;;;AAAA,SAASA,OAAT,EAAkBC,MAAlB,QAAgC,kBAAhC;AACA,SAASC,cAAT,QAA+B,SAA/B;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAAA;;AACjC,MAAIC,QAAQ,GAAGL,cAAc,EAA7B;;AAEA,kBAA8BC,QAAQ,CAACI,QAAD,CAAtC;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,WAASC,WAAT,CAAqBC,GAArB,EAA0BC,EAA1B,EAA8B;AAC5B,QAAIC,MAAM,GAAGF,GAAG,CAACE,MAAjB;AACAA,IAAAA,MAAM,GAAG,IAAT;;AACA,QAAIC,aAAa,mCAAOH,GAAP;AAAYE,MAAAA,MAAM,EAANA;AAAZ,MAAjB;;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACAL,IAAAA,UAAU,CAAC,CAACK,aAAD,CAAD,CAAV;AACD;;AAED,WAASG,cAAT,GAA0B;AACxBF,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;;AAED,MAAME,MAAM,GAAGb,MAAM,CAAC,IAAD,CAArB;AACA,sBACE;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAA+B,MAAA,KAAK,EAAE;AAAEc,QAAAA,MAAM,EAAE,SAAS,MAAT,GAAkB;AAA5B,OAAtC;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAArC;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,oBACGZ,OAAO,CAACa,GAAR,CAAY,UAACC,OAAD,EAAUV,EAAV;AAAA,gCACX,QAAC,OAAD;AACE,cAAA,EAAE,sBAAeU,OAAO,CAACV,EAAvB,CADJ;AAGE,cAAA,OAAO,EAAE;AAAA,uBACPJ,OAAO,CAACe,MAAR,GAAiB,CAAjB,GACIb,WAAW,CAACY,OAAD,CADf,GAEIb,UAAU,CAACF,QAAD,CAHP;AAAA,eAHX;AAAA,sCAUE;AAAA,0BAAKe,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,uBAVF,eAWE;AAAK,gBAAA,SAAS,EAAEF,OAAO,CAACT,MAAR,IAAkB,IAAlB,GAAyB,SAAzB,GAAqC,YAArD;AAAoE,gBAAA,GAAG,EAAEK,MAAzE;AAAiF,gBAAA,GAAG,EAAEI,OAAO,CAACG;AAA9F;AAAA;AAAA;AAAA;AAAA,uBAXF,eAYE;AAAA,0CAAeH,OAAO,CAACI,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,uBAZF;AAAA,eAEOJ,OAAO,CAACV,EAFf;AAAA;AAAA;AAAA;AAAA,qBADW;AAAA,WAAZ;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,eAmBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA2BD;;GA7CuBN,Q;;KAAAA,Q","sourcesContent":["import { NavLink, Outlet } from \"react-router-dom\";\r\nimport { obtainProjects } from \"../data\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\n\r\nexport default function Projects() {\r\n  let projects = obtainProjects();\r\n\r\n  const [currArr, setCurrArr] = useState(projects);\r\n\r\n  function filterArray(arr, id) {\r\n    let active = arr.active\r\n    active = true\r\n    let activeProject = {...arr, active}\r\n    console.log(activeProject)\r\n    setCurrArr([activeProject])\r\n  }\r\n\r\n  function currProjectImg() {\r\n    console.log('idk what im doing')\r\n  }\r\n\r\n  const imgRef = useRef(null)\r\n  return (\r\n    <>\r\n      <main className=\"project-list\" style={{ height: \"auto\" ? \"auto\" : \"100%\" }}>\r\n        <div className=\"project-list\" style={{ padding: \"1rem 0\" }}>\r\n          <nav className=\"nav-projects\">\r\n            {currArr.map((project, id) => (\r\n              <NavLink\r\n                to={`/Projects/${project.id}`}\r\n                key={project.id}\r\n                onClick={() =>\r\n                  currArr.length > 1\r\n                    ? filterArray(project)\r\n                    : setCurrArr(projects)\r\n                }\r\n\r\n              >\r\n                <h4>{project.name}</h4>\r\n                <img className={project.active == true ? 'working' : 'notworking'}  ref={imgRef} src={project.img} />\r\n                <p>Made with: {project.techs}</p>\r\n              </NavLink>\r\n            ))}\r\n          </nav>\r\n          <Outlet />\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}